# 1
cons: takes too long to run the code - took more than 5 mins 

* Ensure the data is sorted by maskid and formdays
sort maskid formdays

* Generate a variable to store medications that share the start date with thiazide
gen shared_start_meds = ""

* Generate a count variable for medications sharing start date with thiazide
gen shared_start_count = 0

* Function to check if a medication is a thiazide
capture program drop is_thiazide
program define is_thiazide
    args medname
    local is_thiazide = 0
    foreach keyword in "hctz" "hct" "hydro" "chlorth" "chloro" "azide" "lidone" "indapa" "metolaz" "diurel" {
        if strpos(lower("`medname'"), "`keyword'") > 0 {
            local is_thiazide = 1
            continue, break
        }
    }
    c_local is_thiazide `is_thiazide'
end

* Loop through each row
forvalues row = 1/`=_N' {
    local thiazide_start = .
    local shared_meds ""
    local count = 0
    
    * Find the thiazide start date in this row
    forvalues i = 1/10 {
        local medname = medname`i'[`row']
        is_thiazide `medname'
        if `is_thiazide' == 1 {
            local thiazide_start = daysstart`i'[`row']
            continue, break
        }
    }
    
    * If thiazide is found, compare with other medications
    if `thiazide_start' != . {
        forvalues i = 1/10 {
            local medname = medname`i'[`row']
            is_thiazide `medname'
            if daysstart`i'[`row'] == `thiazide_start' & `is_thiazide' == 0 {
                local shared_meds = "`shared_meds' `medname'"
                local count = `count' + 1
            }
        }
    }
    
    * Store the results
    replace shared_start_meds = "`shared_meds'" in `row'
    replace shared_start_count = `count' in `row'
}

* Generate indicator for multiple medications sharing start date with thiazide
gen multiple_shared_start = (shared_start_count > 0)



#2 
cons: it doesn't explicitly handle non-thiazide medications in a special way. 
This loop increments the count for any daysstart that matches the thiazide_daystart, regardless of whether that particular medname is actually a thiazide.
BUTTTT it still works upon inspection it did the job

This code loops through daysstart1 to daysstart10, incrementing thiazide_daystart_count each time it finds a daysstart that matches thiazide_daystart (and thiazide_daystart is not missing).
It creates an indicator variable multiple_thiazide_daystart which is set to true (1) if thiazide_daystart_count is greater than 1, and false (0) otherwise. This variable is only defined for cases where thiazide_daystart is not missing

In essence, this code is identifying patients who are on thiazide medications, 
recording the earliest start date for these medications, and then flagging cases where 
multiple thiazide medications were started on the same day

###  
* Generate a column to store the daystart for thiazide medications
sort maskid formdays
gen thiazide_daystart = .
forvalues i = 1/10 {
    replace thiazide_daystart = daysstart`i' if (strpos(lower(medname`i'), "hctz") > 0 | strpos(lower(medname`i'), "hct") > 0 | strpos(lower(medname`i'), "hydro") > 0 | strpos(lower(medname`i'), "chlorth") > 0 | strpos(lower(medname`i'), "chloro") > 0 | strpos(lower(medname`i'), "azide") > 0 | strpos(lower(medname`i'), "lidone") > 0)| strpos(lower(medname`i'), "indapa") > 0 |strpos(lower(medname`i'), "metolaz") > 0 |strpos(lower(medname`i'), "diurel") > 0
}

* Generate a variable to count occurrences
gen thiazide_daystart_count = 0

* Loop through daysstart1 to daysstart10
forvalues i = 1/10 {
    replace thiazide_daystart_count = thiazide_daystart_count + 1 if daysstart`i' == thiazide_daystart & thiazide_daystart != .
}

* Generate indicator for multiple occurrences
gen multiple_thiazide_daystart = (thiazide_daystart_count > 1) if thiazide_daystart != .

* Optional: Label the new variable
label variable multiple_thiazide_daystart "More than one occurrence of thiazide_daystart in daysstart1-10"




#3 
